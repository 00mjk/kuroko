class List:
    def __init__(self):
        self._list = __builtins__.list_new()
    def __get__(self, ind):
        return __builtins__.list_get(self._list, ind)
    def __set__(self, ind, val):
        return __builtins__.list_set(self._list, ind, val)
    def append(self, val):
        return __builtins__.list_append(self._list, val)
    def length(self):
        return __builtins__.list_length(self._list)
    def extend(self, iterable):
        for v in iterable:
            self.append(v)
        return self.length()
    def __str__(self):
        let base = "["
        let len = self._len(self._list)
        for i = 0, i < len, i = i + 1:
            if i > 0:
                base = base + ", "
            base = base + __builtins__.list_get(self._list,i)
        return base + "]"
    def __iter__(self):
        let me = self
        def makeIter(ind):
            let l = me
            let len = l.length()
            let i = ind
            def iter():
                if i >= len:
                    return iter
                let out = l[i]
                i = i + 1
                return out
            return iter
        return makeIter(0)

return List
